      SUBROUTINE POSAPX(LUNXX)

C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C
C SUBPROGRAM:    POSAPX
C   PRGMMR: WOOLLEN          ORG: NP20       DATE: 1994-01-06
C
C ABSTRACT: THIS SUBROUTINE READS TO THE END OF THE FILE POINTED TO BY
C   ABS(LUNXX) AND POSITIONS IT FOR APPENDING.  THE FILE MUST HAVE
C   ALREADY BEEN OPENED FOR OUTPUT OPERATIONS.  IF LUNXX > 0, THE FILE
C   IS BACKSPACED BEFORE BEING POSITIONED FOR APPEND.
C
C PROGRAM HISTORY LOG:
C 1994-01-06  J. WOOLLEN -- ORIGINAL AUTHOR
C 1998-07-08  J. WOOLLEN -- REPLACED CALL TO CRAY LIBRARY ROUTINE
C                           "ABORT" WITH CALL TO NEW INTERNAL BUFRLIB
C                           ROUTINE "BORT"
C 2000-09-19  J. WOOLLEN -- MAXIMUM MESSAGE LENGTH INCREASED FROM
C                           10,000 TO 20,000 BYTES
C 2003-11-04  S. BENDER  -- ADDED REMARKS/BUFRLIB ROUTINE
C                           INTERDEPENDENCIES
C 2003-11-04  D. KEYSER  -- UNIFIED/PORTABLE FOR WRF; ADDED
C                           DOCUMENTATION (INCLUDING HISTORY); OUTPUTS
C                           MORE COMPLETE DIAGNOSTIC INFO WHEN ROUTINE
C                           TERMINATES ABNORMALLY
C 2004-08-09  J. ATOR    -- MAXIMUM MESSAGE LENGTH INCREASED FROM
C                           20,000 TO 50,000 BYTES
C 2009-03-23  J. ATOR    -- MODIFIED TO HANDLE EMBEDDED BUFR TABLE
C                           (DICTIONARY) MESSAGES; ADDED LUNXX < 0
C                           OPTION TO SIMULATE POSAPN
C 2010-05-11  J. ATOR    -- SET ISCODES TO -1 IF UNSUCCESSFUL
C
C USAGE:    CALL POSAPX (LUNXX)
C   INPUT ARGUMENT LIST:
C     LUNXX    - INTEGER: ABSOLUTE VALUE IS FORTRAN LOGICAL UNIT NUMBER
C                FOR BUFR FILE (IF LUNXX < 0, THEN THE FILE IS NOT
C                BACKSPACED BEFORE POSITIONING FOR APPEND)
C
C   INPUT FILES:
C     UNIT "LUNIT" - BUFR FILE
C
C REMARKS:
C    THIS ROUTINE CALLS:        BORT     IDXMSG   RDBFDX   RDMSGW
C                               STATUS
C    THIS ROUTINE IS CALLED BY: OPENBF   POSAPN
C                               Normally not called by any application
C                               programs.
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 77
C   MACHINE:  PORTABLE TO ALL PLATFORMS
C
C$$$

      INCLUDE 'bufrlib.prm'

      COMMON /STCODE/ ISCODES(NFILES)

      DIMENSION   MBAY(MXMSGLD4)

C-----------------------------------------------------------------------
C-----------------------------------------------------------------------

      LUNIT = ABS(LUNXX)

      CALL STATUS(LUNIT,LUN,IL,IM)
      IF(IL.EQ.0) GOTO 901
      IF(IL.LT.0) GOTO 902

      REWIND LUNIT
      IREC = 0

C  TRY TO READ TO THE END OF THE FILE
C  ----------------------------------

1     CALL RDMSGW(LUNIT,MBAY,IER)
      IF(IER.LT.0) THEN
        IF((IER.EQ.-1).AND.(LUNXX.GT.0)) THEN
	  GOTO 2
        ELSE
	  GOTO 3
	ENDIF
      ENDIF
      IREC = IREC+1
      IF(IDXMSG(MBAY).EQ.1) THEN

C	This is an internal dictionary message that was generated by the
C	BUFR archive library software.  Backspace the file pointer and
C	then read and store all such dictionary messages (they should be
C	stored consecutively!) and reset the internal tables.

	BACKSPACE LUNIT
	CALL RDBFDX(LUNIT,LUN)

C	Note that IREC was only incremented by 1, even though subroutine
C	RDBFDX may have processed more than 1 dictionary message from
C	the file.  This is fine as long as RDBFDX is called in a similar
C	manner from within the below DO loop.

      ENDIF
      GOTO 1

C  IF SUCCESSFUL, BACKSPACE FOR APPENDING AND RETURN
C  -------------------------------------------------

2     BACKSPACE (LUNIT,IOSTAT=IERBSP)
      IF(IERBSP.NE.0) ISCODES(LUN) = -1
      GOTO 100

C  IF AN I/O ERROR WAS ENCOUNTERED, THEN POSITION THE FILE FOR
C  APPENDING AT THE END OF THE LAST GOOD RECORD
C  -----------------------------------------------------------

3     REWIND (LUNIT,IOSTAT=IERRWD)
      IF(IERRWD.NE.0) THEN
        ISCODES(LUN) = -1
        GOTO 100
      ENDIF
      DO J=1,IREC
        CALL RDMSGW(LUNIT,MBAY,IER)
        IF(IER.EQ.-2) GOTO 900
        IF(IER.EQ.-1) THEN
	  IF(LUNXX.GT.0) THEN
	    GOTO 2
	  ELSE
	    GOTO 903
	  ENDIF
	ENDIF
	IF(IDXMSG(MBAY).EQ.1) THEN
	  BACKSPACE LUNIT
	  CALL RDBFDX(LUNIT,LUN)
	ENDIF
      ENDDO

C  EXITS
C  -----

100   RETURN
900   CALL BORT('BUFRLIB: POSAPX - ERROR READING A BUFR MESSAGE')
901   CALL BORT('BUFRLIB: POSAPX - INPUT BUFR FILE IS CLOSED, IT MUST'//
     . ' BE OPEN FOR OUTPUT')
902   CALL BORT('BUFRLIB: POSAPX - INPUT BUFR FILE IS OPEN FOR INPUT'//
     . ', IT MUST BE OPEN FOR OUTPUT')
903   CALL BORT('BUFRLIB: POSAPX - FAILED TO READ UP TO END-OF-FILE')
      END
